@model P4.Web.Models.UtilizationModel
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    ViewBag.Title = L("UtilizationHour");
    ViewBag.ActiveMenu = "UtilizationHour";
}

@section styles
{
    <link href="~/assets/css/bootstrapSwitch.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/css/chosen.css" />

    <style type="text/css">
        .SelectBG {
            background-color: #f00;
        }
    </style>

}
@section scriptsindex{
    <script src="~/assets/js/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="~/assets/js/jquery.ui.touch-punch.min.js"></script>
    <script src="~/assets/js/date-time/bootstrap-datepicker.min.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/locales/bootstrap-datepicker.zh-CN.js"></script>
    <script src="~/assets/js/date-time/daterangepicker.min.js"></script>
    <script src="~/assets/js/chosen.jquery.min.js"></script>
}

<div class="row" style="margin:10px 0">
    <table style="width:700px;" border="0">
        <tr>
            <td style="width:8%;">泊位段：</td>
            <td style="width:15%;">
                <select class="ls-wp-fullwidth-container chosen-select" id="BerthsecId" name="BerthsecId" data-placeholder="选择泊位段名称..." style="width:200px;">
                    @foreach (var entity in Model.berthsecList)
                    {
                        <option value="@entity.Id">@entity.BerthsecName</option>
                    }
                </select>
            </td>

            <td style="width:10%;"> 收费时间：</td>
            <td>
                <div class="row">
                    <div class="col-xs-8 col-sm-11">
                        <div class="input-group">
                            <input class="form-control date-picker" id="operateDateBegin" type="text" data-date-format="yyyy-mm-dd" />
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </td>

            <td>
                <div class="row">
                    <div class="col-xs-8 col-sm-11">
                        <div class="input-group">
                            <input class="form-control date-picker" id="operateDateEnd" type="text" data-date-format="yyyy-mm-dd" />
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </td>

            <td style="text-align: left;">
                <button type="button" id="myButton" data-loading-text="Loading..." class="btn btn-sm btn-primary" autocomplete="off">
                    搜索
                </button>
            </td>
        </tr>
    </table>
</div>

<table id="grid-table"></table>
<div id="grid-pager"></div>

<div id="echarDiv" style="height: 410px;width:100%;">
</div>


<script type="text/javascript">
    $(document).ready(function () {
        var myDate = new Date();
        myDate.toLocaleDateString();
        var operateDateBegin = myDate.getFullYear() + "-"
            + ((myDate.getMonth() + 1) < 10 ? ("0" + (myDate.getMonth() + 1).toString()) : (myDate.getMonth() + 1)) + "-"
            + (myDate.getDate() < 10 ? ("0" + myDate.getDate().toString()) : myDate.getDate());
        var operateDateEnd = myDate.getFullYear() + "-"
            + ((myDate.getMonth() + 1) < 10 ? ("0" + (myDate.getMonth() + 1).toString()) : (myDate.getMonth() + 1)) + "-"
            + (myDate.getDate() < 10 ? ("0" + (myDate.getDate()).toString()) : myDate.getDate());
        $('#operateDateBegin').val(operateDateBegin + " 00:00");
        $('#operateDateEnd').val(operateDateEnd + " 23:59");

        $('#operateDateBegin').datetimepicker({
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            forceParse: 0,
            linkFormat: "yyyy-mm-dd hh:ii",
            format: 'yyyy-mm-dd hh:ii'
        });

        $('#operateDateEnd').datetimepicker({
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            linkFormat: "yyyy-mm-dd hh:ii",
            format: 'yyyy-mm-dd hh:ii'
        });
        $('.chosen-select').chosen();

        $('#myButton').on('click', function () {

            GetAjaxChartData();//更改线性数据

            jQuery('#grid-table').jqGrid('setGridParam', {
                ajaxSelectOptions: { type: "GET", async: false },
                ajaxGridOptions: { type: "POST", async: false },
                url: '../Decision/GetUtilizationHourList',
                datatype: 'json',
                postData:
                {
                    'berthsecId': $('#BerthsecId').val(),
                    'begintime': $('#operateDateBegin').val(),
                    'endtime': $('#operateDateEnd').val(),
                    'filters': null
                },
                page: 1
            }).trigger('reloadGrid');
        });
    });
</script>


@*测试代码分隔符*@
<script type="text/javascript" src="../../assets/js/Echarts/dist/esl.js"></script>
<script type="text/javascript" src="../../assets/js/Echarts/dist/esl.js"></script>
<script type="text/javascript" src="../../assets/js/Echarts/dist/echarts.js"></script>
<script type="text/javascript" src="../../assets/js/Echarts/dist/chart/line.js"></script>
<script type="text/javascript">

    //定义图表options
    var options = {
        title: {
            text: "泊位段分析曲线图",
            //subtext: "实收/欠费/现金/账号/应收"
        },
        tooltip: { trigger: 'axis' },
        legend: { data: [] },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                magicType: { show: true, type: ['line', 'bar'] },
                restore: { show: true },
                saveAsImage: { show: true }
            }
        },
        calculable: true,
        xAxis: [
            {
                type: 'category',
                boundaryGap: true,
                data: ['0:00-1:00', '1:00-2:00', '2:00-3:00', '3:00-4:00', '4:00-5:00', '5:00-6:00', '6:00-7:00', '7:00-8:00', '8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00', '12:00-13:00', '13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00', '18:00-19:00', '19:00-20:00', '20:00-21:00', '21:00-22:00', '22:00-23:00', '23:00-24:00']
            }
        ],
        yAxis: [
            {

                type: 'value',
                axisLabel: {
                    show: true,
                    interval: 'auto',
                    formatter: '{value}'
                },
                show: true,
            }
        ],
        series: [ /*{data: []}*/
            //{
            //    itemStyle: {
            //        normal: {
            //            label: {
            //                show: true,
            //                position: 'top',
            //                formatter: '{b}\n{c}%'
            //            }
            //        }
            //    },
            //}
        ]
    };
    var myChart;
    // Step:4 require echarts and use it in the callback.
    // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
    require.config({
        paths: { echarts: '../../assets/js/Echarts/dist' }
    });
    require(
        [
            'echarts',
            'echarts/chart/line' //按需加载图表关于线性图、折线图的部分
        ],
        //DrawEChart //异步加载的回调函数绘制图表
        function (ec) {
            myChart = ec.init(document.getElementById('echarDiv'));
            //选择一个空图表
            myChart.setOption(options);
            GetAjaxChartData();
        }
    );

    //var window.myChart;
    //创建ECharts图表方法
    ///点击按钮获取图表数据采用ajax方式
    function GetAjaxChartData() {
        //图表显示提示信息
        myChart.showLoading({
            text: "图表数据正在努力加载..."
        });
        //通过Ajax获取数据
        $.ajax({
            type: "post",
            async: true, //异步执行
            url: '../Decision/UtilizationHourEcharData',
            data: {
                'begintime': $('#operateDateBegin').val(),
                'endtime': $('#operateDateEnd').val(),
                'berthsecId': $('#BerthsecId').val(),
                'rows': 1000,
                'page': 1
            },
            // data: { operatedatebegin: $('#operateDateBegin').datebox('getValue'), operatedateend: $('#operateDateEnd').datebox('getValue') },
            //  url: "EmployeeMoneyLine.aspx?type=getData&operateDateBegin=2015/6/30",
            dataType: "json", //返回数据形式为json
            success: function (result) {
                if (result) {
                    //将返回的category和series对象赋值给options对象内的category和series
                    //因为xAxis是一个数组 这里需要是xAxis[i]的形式
                    options.series = result.series;
                    options.legend.data = result.legend;
                    window.myChart.hideLoading();
                    window.myChart.setOption(options, true);
                }
            },
            error: function (errorMsg) {
                console.log(errorMsg);
                alert("不好意思，图表请求数据失败啦!");
            }

        });
    }
</script>

@*测试代码分隔符*@


@section scriptsgrid
{
    //主表
    jQuery(grid_selector).jqGrid({
    url: '../Decision/GetUtilizationHourList',
    datatype: "json",
    ajaxSelectOptions　: {type: "GET"} ,
    mtype: "post",
    height: 'auto',
    autowidth: true,
    shrinkToFit: false,
    colNames: ['操作','berthsecid', 'Status', '泊位段', '日期', '类型', '0:00-1:00', '1:00-2:00', '2:00-3:00', '3:00-4:00', '4:00-5:00', '5:00-6:00', '6:00-7:00', '7:00-8:00', '8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00', '12:00-13:00', '13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00', '18:00-19:00', '19:00-20:00', '20:00-21:00', '21:00-22:00', '22:00-23:00', '23:00-24:00'],
    colModel: [{
    name: 'myac', index: '', width: 80, fixed: true, sortable: false, resize: false, search: false,
    formatter: 'actions',hidden:window.rowedit, frozen : true, align: 'center',
    formatoptions: {
    keys: true,
    delOptions: { recreateForm: true, beforeShowForm: beforeDeleteCallback }
    }
    },
    { name: 'Id', index: 'berthsecid',key: true, sorttype: "int", hidden: true},
    { name: 'Status', index: 'Status',  @*key: true,*@ hidden: true},
    { name: 'BerthsecName', index: 'BerthsecName', editable: true , required: true},
    { name: 'DateTimeValue', index: 'DateTimeValue',  width:83},
    { name: 'StatusValue', index: 'StatusValue',  width:75, editable: true , required: true},
    { name: 'Utilization0', index: 'Utilization0', width:83, editable: true , required: true, formatter:Status},
    { name: 'Utilization1', index: 'Utilization1', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization2', index: 'Utilization2', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization3', index: 'Utilization3', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization4', index: 'Utilization4', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization5', index: 'Utilization5', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization6', index: 'Utilization6', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization7', index: 'Utilization7', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization8', index: 'Utilization8', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization9', index: 'Utilization9', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization10', index: 'Utilization10', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization11', index: 'Utilization11', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization12', index: 'Utilization12', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization13', index: 'Utilization13', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization14', index: 'Utilization14', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization15', index: 'Utilization15', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization16', index: 'Utilization16', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization17', index: 'Utilization17', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization18', index: 'Utilization18', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization19', index: 'Utilization19', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization20', index: 'Utilization20', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization21', index: 'Utilization21', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization22', index: 'Utilization22', width:83,  editable: true , required: true, formatter:Status},
    { name: 'Utilization23', index: 'Utilization23', width:83,  editable: true , required: true, formatter:Status}
    ],
    viewrecords: true,
    rowNum: 10,
    rowList: [10, 20, 30],
    pager: pager_selector,
    sortname: 'Id',
    sortorder: 'desc',
    altRows: true,
    toppager: false,
    editurl: "../Decision/ProcessDictionaryType",
    multiselect: true,
    //multikey: "ctrlKey",
    multiboxonly: true,
    loadComplete: function () {
    var table = this;

    setTimeout(function () {
    styleCheckbox(table);
    updateActionIcons(table);
    updatePagerIcons(table);
    enableTooltips(table);
    }, 0);
    }
    });
}

@section scriptsbuttonbyself{
    function Status(cellvalue, options)
    {
    if(options.rowId == 0){
    if(cellvalue.length == 0)
    return "----";
    else if(cellvalue >= 0.8)
    return "<span class='badge badge-danger'>"+ Math.round(cellvalue * 10000) / 100+"%</span>";
    else if(cellvalue >= 0.6)
    return "<span class='badge badge-yellow'>"+ Math.round(cellvalue * 10000) / 100+"%</span>";
    else
    return  Math.round(cellvalue * 10000) / 100+"%";
    }
    else
    {
    if(cellvalue.length == 0)
    return "----";
    else if(cellvalue >= 5)
    return "<span class='badge badge-success'>"+ Math.round(cellvalue * 100) / 100+"</span>";
    else if(cellvalue < 2)
    return "<span class='badge badge-danger'>"+ Math.round(cellvalue * 100) / 100+"</span>";
    else
    return Math.round(cellvalue * 100) / 100;
    }
    }
}




