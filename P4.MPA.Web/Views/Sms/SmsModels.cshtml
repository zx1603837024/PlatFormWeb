
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    ViewBag.Title = L("SmsModelManagement");
    ViewBag.ActiveMenu = "SmsModelManagement";
}

<table id="grid-table"></table>
<div id="grid-pager"></div>


@section scriptsgrid
    {

    jQuery(grid_selector).jqGrid({
    url: '../Sms/GetSmsModelList',
    datatype: "json",
    mtype: "post",
    height: 'auto',
    autowidth: true,
    shrinkToFit: false,
    colNames: ['操作', 'ID', '短信类型', '短信内容', '创建时间','用户名', '密码', '路径'],
    colModel: [
    {
    name: 'myac', index: '', width: 80, fixed: true, sortable: true, resize: false,
    formatter: 'actions',hidden:window.rowedit,
    formatoptions: {
    keys: true,
    delOptions: { recreateForm: true, beforeShowForm: beforeDeleteCallback }
    //editformbutton:true, editOptions:{recreateForm: true, beforeShowForm:beforeEditCallback}
    }
    },
    { name: 'Id', index: 'Id', sorttype: "int", hidden: true, key: true},
    { name: 'ModelType', index: 'ModelType', editable: true ,edittype:"select",editoptions:{ dataUrl: '../Dictionarys/GetSmsModelTypeList/'+(new Date()).getMilliseconds(), defaultValue: '1' }, formatter: ValueChange},
    { name: 'SmsContext', index: 'SmsContext',width:"500px", editable: true, edittype:'textarea' },
    { name: 'CreationTime', index: 'CreationTime', sorttype: "date", formatter: 'date', formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' } },
    { name: 'UserName', index: 'UserName', editable: true },
    { name: 'Password', index: 'Password', editable: true },
    { name: 'Url', index: 'Url', editable: true }
    ],

    viewrecords: true,
    rowNum: 10,
    rowList: [10, 20, 30],
    pager: pager_selector,
    altRows: true,
    sortname: 'Id',
    sortorder: 'desc',
    //toppager: true,
    editurl: "../Sms/ProcessSmsModel",
    multiselect: true,
    //multikey: "ctrlKey",
    multiboxonly: true,
    loadComplete: function () {
    var table = this;
    setTimeout(function () {
    styleCheckbox(table);
    updateActionIcons(table);
    updatePagerIcons(table);
    enableTooltips(table);
    }, 0);
    }
    });
}

@section scriptsbuttonbyself{
    function ValueChange(cellvalue, options)
    {
    if(cellvalue == 'RegisterModel')
    return "<span class='badge badge-success'>无车牌注册</span>";
    else if(cellvalue == 'RegisterHavaPlateNumberModel')
    return "<span class='badge'>有车牌注册</span>";
    else if(cellvalue == 'RenewCardModel')
    return "<span class='badge badge-grey'>账号充值</span>";
    else if(cellvalue == 'RegisterAppModel')
    return "<span class='badge badge-warning'>接收验证码</span>";
    else if(cellvalue == 'PaymentModel')
    return "<span class='badge badge-danger'>账号预付</span>";
    else if(cellvalue == 'ConsumptionEqualModel')
    return "<span class='badge badge-info'>消费扣款(预付=消费)</span>";
    else if(cellvalue == 'ConsumptionLessModel')
    return "<span class='badge badge-purple'>消费扣款(预付<消费)</span>";
    else if(cellvalue == 'ConsumptionGreaterModel')
    return "<span class='badge badge-inverse'>消费扣款(预付>消费)</span>";
    else if(cellvalue == 'ConsumptionPaymentModel')
    return "<span class='badge'>账号欠费追缴</span>";
    else if(cellvalue == 'ConsumptionMonthModel')
    return "<span class='badge badge-pink'>包月车辆</span>";
    else if(cellvalue == 'ConsumptionMonthRenewModel')
    return "<span class='badge badge-yellow'>包月车辆续费</span>";
    else if(cellvalue == 'BlackCarInModel')
    return "<span class='badge badge-warning'>黑名单车辆入场</span>";
    else if(cellvalue == 'BlackCarOutModel')
    return "<span class='badge badge-info'>黑名单车辆出场</span>";
    }
}




