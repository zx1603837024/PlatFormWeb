@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    ViewBag.Title = L("UsersManagement");
    ViewBag.ActiveMenu = "UsersManagement";

}
@section styles
{
    <link rel="stylesheet" href="~/assets/css/metroStyle.css" />
}
<table id="grid-table"></table>
<div id="grid-pager"></div>

<!--Tree Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">权限树</h4>
            </div>
            <div class="modal-body">
                <div class="content_wrap">
                    <div class="zTreeDemoBackground left">
                        <ul id="treeDemo" class="ztree"></ul>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="getCheckedNodes()">查看权限信息</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" onclick="Save()">保存</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalMain" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">主页设置</h4>
            </div>
            <div class="modal-body">
                <div class="content_wrap">
                    <table border="0" align="left">
                        <tr>
                            <td align="right" height="30px">
                                <span style="margin-left:25px">主页：</span>
                            </td>
                            <td align="left">
                                <input type="text" id="MainPage" style="width:200px;margin-left:25px" />
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" onclick="SaveUserShortcuts()">保存</button>
            </div>
        </div>
    </div>
</div>


@section scriptsgrid
 {
    Savetype = "";
    jQuery(grid_selector).jqGrid({
    url:'../Users/GetAllUsers',
    datatype: "json",
    ajaxSelectOptions　: {type: "GET"} ,
    mtype: "post",
    shrinkToFit:false,
    height: 'auto',
    autowidth: true,
    colNames: ['操作', 'ID', '商户名','分公司', '用户名', '别名', '真实姓名','邮件地址', '手机号', '是否邮件确认', '是否启用', '性别', '出生年月', '最后修改时间', '最后登录时间', '最后修改用户'],
    colModel: [
    {
    name: 'myac', index: '', width: 80, search: false, fixed: true, sortable: true, resize: false,
    formatter: 'actions', hidden:window.rowedit,
    formatoptions: {
    keys: true,
    delOptions: { recreateForm: true, beforeShowForm: beforeDeleteCallback }
    }
    },
    { name: 'Id', index: 'Id', sorttype: "int", hidden: true, key: true},
    { name: 'TenantName', index: 'TenantId', search: true, sorttype: "int", hidden: window.TenantField, editable: true, edittype: "select", editoptions: { dataUrl: '../System/GetTenantsSelect/' + (new Date()).getMilliseconds(), defaultValue: '1' }, width: 120 },
    { name: 'CompanyName', index: 'CompanyName', editable: true ,search:false ,edittype:"select",
    editoptions:{ dataUrl: '../Users/GetAllCompanyName/'+(new Date()).getMilliseconds(), defaultValue: '1' }, width: 240},
    { name: 'UserName', index: 'UserName', editable: true, width: 100 },
    { name: 'Name', index: 'Name', editable: true, width: 100 },
    { name: 'Surname', index: 'Surname', editable: true, width: 100 },
    { name: 'EmailAddress', index: 'EmailAddress', editable: true , width: 150, editrules:{required: true, email: true}},
    { name: 'TelePhone', index: 'TelePhone', editable: true , width: 100, editrules:{required: true, number: true}},

    { name: 'IsEmailConfirmed', index: 'IsEmailConfirmed', editable: true, edittype: "select", editoptions: { value: "true:是;false:否" }, formatter:YesAndNo, stype:'select', width: 80, searchoptions: { dataUrl:'../Dictionarys/GetYesOrNoSelect/'+(new Date()).getMilliseconds(), sopt:['eq', 'ne']} },

    { name: 'IsActive', index: 'IsActive', width: 80, editable: true, edittype: "select", editoptions: { value: "true:是;false:否" }, formatter:YesAndNo, stype:'select', searchoptions: { dataUrl:'../Dictionarys/GetYesOrNoSelect/'+(new Date()).getMilliseconds(), sopt:['eq', 'ne']} },

    { name: 'Gender', width: 80, index: 'Gender', editable: true, edittype: "select", editoptions: { value: "true:男;false:女" },formatter: ManAndWomen, search: false },

    { name: 'Birthday', width: 80, index: 'Birthday', sorttype: "date", editable: false, formatter: 'date', formatoptions: { srcformat: 'Y-m-d', newformat: 'Y-m-d' }, unformat: pickDate,editrules:{required:true}, search: false },

    { name: 'LastModificationTime', index: 'LastModificationTime', sorttype: "date", formatter: 'date', formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' }, search: false },
    { name: 'LastLoginTime', index: 'LastLoginTime', sorttype: "date", formatter: 'date', search: false, formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' } },
    @*{ name: 'LastModifierUserId', index: 'LastModifierUserId'},*@
    { name: 'LastModifierUserName', index: 'LastModifierUserName', search: false }
    @*{ name:'RoleId',index:'RoleId',editable:true,edittype: "select", editoptions: { dataUrl: '../System/GetRolesSelect', defaultValue: '1' }},*@
    @*{ name:'RoleDisplayName',index:'RoleDisplayName', editable:true, edittype:'select', editoptions:{value:{1:'One',2:'Two'},multiple:true,size:3} },*@

    @*{ name:'RoleDisplayName',index:'RoleDisplayName', editable:true,edittype:'custom', editoptions:{custom_element: myelem, custom_value: myvalue} }*@
    ],
    viewrecords: true,
    rowNum: 10,
    rowList: [10, 20, 30],
    pager: pager_selector,
    altRows: true,
    sortname: 'Id',
    sortorder: 'desc',
    //toppager: true,
    editurl: "../Users/ProcessUser",
    multiselect: true,
    //multikey: "ctrlKey",
    multiboxonly: true,
    loadComplete: function () {
    var table = this;
    setTimeout(function () {
    styleCheckbox(table);
    updateActionIcons(table);
    updatePagerIcons(table);
    enableTooltips(table);
    }, 0);
    }
    });
}
@section scriptsbuttonbyself{
    if(window.field1){
    jQuery(grid_selector).navButtonAdd(pager_selector,
    {
    buttonicon: "ui-icon-pencil",
    title: "操作权限",
    caption: "操作权限",
    position: "last",
    onClickButton: function()
    {
    Savetype = "oper";
    var ids = jQuery(grid_selector).jqGrid('getGridParam','selarrrow');
    if (ids.length == 1)
    {
    chooseuserid=ids[0];
    $.ajax({
    type: "Post",
    url: "/Users/UserOperPermission?userid="+ ids[0],
    success: function (data) {
    // alert("data1:"+data);
    treeini(data);
    $("#myModal").modal('show');

    }, error: function (data) {
    swal("", "获取操作权限数据失败，请稍后重试...", "error");
    }
    });
    }
    else
    {
    swal("", "请选择用户...", "info");
    }
    }
    });
    }

    if(window.field2){
    jQuery(grid_selector).navButtonAdd(pager_selector,
    {
    buttonicon: "ui-icon-pencil",
    title: "数据权限",
    caption: "数据权限",
    position: "last",
    onClickButton: function(){
    Savetype="data";
    var ids = jQuery(grid_selector).jqGrid('getGridParam','selarrrow');
    if (ids.length == 1)
    {
    chooseuserid = ids[0];
    $.ajax({
    type: "Post",
    url: "/Users/UserDataPermission?userid="+ ids[0],
    success: function (data) {
    // alert("data1:"+data);
    treeini(data);
    $("#myModal").modal('show');
    }, error: function (data) {
    swal("", "获取数据权限数据失败，请稍后重试", "error");
    }
    });
    }
    else
    {
    swal("", "请选择用户...", "info");
    }
    }
    });
    }

    if(window.field3){
    jQuery(grid_selector).navButtonAdd(pager_selector,
    {
    buttonicon: "ui-icon-pencil",
    title: "初始密码",
    caption: "初始密码",
    position: "last",
    onClickButton: function(){
    Savetype="data";
    var ids = jQuery(grid_selector).jqGrid('getGridParam','selarrrow');
    if (ids.length == 1)
    {
    swal({
    title: "系统提示?",
    text: "您确定要初始化密码？",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#DD6B55",
    confirmButtonText: "确定!",
    closeOnConfirm: false
    },
    function () {
    $.ajax({
    type: "Post",
    url: "/Users/InitPassword/" + ids[0],
    success: function (data) {
    swal("", "密码初始化成功！", "success");
    }, error: function (data) {
    swal("", "密码初始化失败，请稍后重试", "error");
    }
    });
    });
    }
    else
    {
    swal("", "请选择用户...", "info");
    }
    }
    });
    }


    if(window.field4){
    jQuery(grid_selector).navButtonAdd(pager_selector,
    {
    buttonicon: "ui-icon-pencil",
    title: "初始权限",
    caption: "初始权限",
    position: "last",
    onClickButton: function(){
    Savetype="data";
    var ids = jQuery(grid_selector).jqGrid('getGridParam','selarrrow');
    if (ids.length == 1)
    {
    selectedId = ids[0];
    swal({
    title: "系统提示?",
    text: "您确定要给用户初始化权限？",
    type: "warning",
    showCancelButton: true,
    confirmButtonColor: "#DD6B55",
    confirmButtonText: "确定!",
    closeOnConfirm: false
    },
    function () {
    $.ajax({
    type: "Post",
    url: "/CarVideoConfig/UserInitialization",
    data: { input: JSON.stringify({UserId : selectedId}) },
    success: function (data) {
    swal("", "初始化权限成功！", "success");
    }, error: function (data) {
    swal("", "初始化权限失败，请稍后重试", "error");
    }
    });
    });
    }
    else
    {
    if (ids.length > 1) {
        swal("", "只能选择一个用户...", "info");
    } else {
        swal("", "请选择用户...", "info");
    }
    }
    }
    });
    }
}

@section scripts
    {
    <script src="~/assets/js/z-tree/jquery.ztree.core-3.5.js"></script>
    <script src="~/assets/js/z-tree/jquery.ztree.excheck-3.5.js"></script>
    <script type="text/javascript" src="~/assets/js/z-tree/jquery.ztree.exedit-3.5.js"></script>
    <script type="text/javascript">

        var selectedId = 0;

        var setting = {
            view: {
                selectedMulti: false
            },
            check: {
                enable: true
            },
            //data: {
            //    simpleData: {
            //        enable: true //数据是否采用Array格式（默认是false）
            //    }, check: {
            //        enable: true, // 显示多选框按钮
            //        chkStyle: "checkbox", // 添加生效
            //        chkboxType: { "Y": "ps", "N": "s" } //Y:勾选（参数：p:影响父节点），N：不勾（参数s：影响子节点）[p 和 s 为参数]
            //    }
            //},
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                beforeCheck: beforeCheck,
                onCheck: onCheck
            }
        };
        var zNodes = "";

        var code, log, className = "dark";
        function beforeCheck(treeId, treeNode) {
            className = (className === "dark" ? "" : "dark");
            showLog("[ " + getTime() + " beforeCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
            return (treeNode.doCheck !== false);
        }

        function onCheck(e, treeId, treeNode) {
            showLog("[ " + getTime() + " onCheck ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
        }

        function showLog(str) {
            if (!log) log = $("#log");
            log.append("<li class='" + className + "'>" + str + "</li>");
            if (log.children("li").length > 6) {
                log.get(0).removeChild(log.children("li")[0]);
            }
        }

        function getTime() {
            var now = new Date(),
                h = now.getHours(),
                m = now.getMinutes(),
                s = now.getSeconds(),
                ms = now.getMilliseconds();
            return (h + ":" + m + ":" + s + " " + ms);
        }

        function checkNode(e) {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo"),
                type = e.data.type,
                nodes = zTree.getSelectedNodes();
            if (type.indexOf("All") < 0 && nodes.length == 0) {
                //alert("请先选择一个节点");
                swal("", "请先选择一个节点", "info");
            }

            if (type == "checkAllTrue") {
                zTree.checkAllNodes(true);
            } else if (type == "checkAllFalse") {
                zTree.checkAllNodes(false);
            } else {
                var callbackFlag = $("#callbackTrigger").attr("checked");
                for (var i = 0, l = nodes.length; i < l; i++) {
                    if (type == "checkTrue") {
                        zTree.checkNode(nodes[i], true, false, callbackFlag);
                    } else if (type == "checkFalse") {
                        zTree.checkNode(nodes[i], false, false, callbackFlag);
                    } else if (type == "toggle") {
                        zTree.checkNode(nodes[i], null, false, callbackFlag);
                    } else if (type == "checkTruePS") {
                        zTree.checkNode(nodes[i], true, true, callbackFlag);
                    } else if (type == "checkFalsePS") {
                        zTree.checkNode(nodes[i], false, true, callbackFlag);
                    } else if (type == "togglePS") {
                        zTree.checkNode(nodes[i], null, true, callbackFlag);
                    }
                }
            }
        }

        function setAutoTrigger(e) {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            zTree.setting.check.autoCheckTrigger = $("#autoCallbackTrigger").attr("checked");
            $("#autoCheckTriggerValue").html(zTree.setting.check.autoCheckTrigger ? "true" : "false");
        }
        function treeini(data) {
            zNodes = eval("[" + data + "]");
            $.fn.zTree.init($("#treeDemo"), setting, zNodes);
            $("#checkTrue").bind("click", { type: "checkTrue" }, checkNode);
            $("#checkFalse").bind("click", { type: "checkFalse" }, checkNode);
            $("#toggle").bind("click", { type: "toggle" }, checkNode);
            $("#checkTruePS").bind("click", { type: "checkTruePS" }, checkNode);
            $("#checkFalsePS").bind("click", { type: "checkFalsePS" }, checkNode);
            $("#togglePS").bind("click", { type: "togglePS" }, checkNode);
            $("#checkAllTrue").bind("click", { type: "checkAllTrue" }, checkNode);
            $("#checkAllFalse").bind("click", { type: "checkAllFalse" }, checkNode);

            $("#autoCallbackTrigger").bind("change", {}, setAutoTrigger);
            var zTree = $.fn.zTree.getZTreeObj("treeDemo");
            type = { "Y": "ps", "N": "s" };// 取消勾选时 不关联父节点
            zTree.setting.check.chkboxType = type;
        }

        function getCheckedNodes() {
            var treeObj = $.fn.zTree.getZTreeObj("treeDemo");
            var nodes = treeObj.transformToArray(treeObj.getNodes());
            var checkednode = "";
            for (var i = 0; i < nodes.length; i++) {
                var checked = nodes[i].checked;
                if (checked == true) {
                    checkednode += nodes[i].name + " ,  ";
                    if (nodes[i].name.indexOf(".") > 0)
                        checkednode += nodes[i].name + " ,\r\n  ";
                }
            }
            alert(checkednode);
        }

        //保存主界面
        function SaveUserShortcuts() {
            alert('11');
            $.ajax({
                type: "POST",
                url: "../Users/SaveUserShortcuts",
                //contentType: "application/json; charset=utf-8",
                cache: false,
                dataType: 'json',
                data: {
                    UserId: selectedId,
                    Shortcuts: $("#MainPage").val()
                },
                success: function (data) {
                    swal("", "保存成功", "info");
                    $('#ModalMain').modal('hide');
                }
            });
        }

        function Save() {
            var treeObj = $.fn.zTree.getZTreeObj("treeDemo");
            var nodes = treeObj.transformToArray(treeObj.getNodes());
            var checkNodes = new Array();
            for (var i = 0, j = 0; i < nodes.length; i++) {
                var checked = nodes[i].checked;
                var disabled = nodes[i].chkDisabled;
                if (checked == true && disabled == false) {
                    checkNodes[j] = nodes[i];
                    j++;
                }
            }

            var json = { "savetype": Savetype, "chooseuserid": chooseuserid, "nodes": JSON.stringify(checkNodes) };
            var jsonstr = JSON.stringify(json);
            //var post = { data: JSON.stringify(json) };//JSON.stringify(json)把json转化成字符串
            $.ajax({
                type: "POST",
                url: "../Users/SavePermission",
                contentType: "application/json; charset=utf-8",
                cache: false,
                dataType: 'json',
                //data: {
                //    savetype: Savetype,
                //    checkednode: checkednode
                //},
                data: jsonstr,
                success: function (data) {
                    //alert("ok");
                    swal("", "保存成功", "info");
                    $('#myModal').modal('hide');
                }
            });
            // alert(checkednode);
        }
    </script>
}
