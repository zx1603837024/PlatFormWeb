@using P4.Web.Models
@model InspectorChargesModel
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    ViewBag.Title = L("InspectorsReport");
    ViewBag.ActiveMenu = "InspectorsReport";
}
@section styles
{
    <link rel="stylesheet" href="~/assets/css/bootstrapSwitch.css" />
    <link rel="stylesheet" href="~/assets/css/chosen.css" />
}
@section scriptsindex{
    <script src="~/assets/js/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="~/assets/js/jquery.ui.touch-punch.min.js"></script>

    <script src="~/assets/js/date-time/bootstrap-datepicker.min.js"></script>
    <script src="~/assets/js/date-time/daterangepicker.min.js"></script>

    <script src="~/assets/js/chosen.jquery.min.js"></script>
}
<div class="row" style="margin:10px 0">
    <table>
        <tr>
            <td width="80px"><label for="id-date-picker-1">查询日期：</label></td>
            <td width="190px">
                <div class="row">
                    <div class="col-xs-8 col-sm-11">
                        <div class="input-group">
                            <input class="form-control date-picker" id="operateDateBegin" type="text" data-date-format="yyyy-mm-dd" />
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </td>
            <td style="text-align: center;">到&nbsp;&nbsp;</td>
            <td width="190px">
                <div class="row">
                    <div class="col-xs-8 col-sm-11">
                        <div class="input-group">
                            <input class="form-control date-picker" id="operateDateEnd" type="text" data-date-format="yyyy-mm-dd" />
                            <span class="input-group-addon">
                                <i class="icon-calendar bigger-110"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </td>
            <td width="80px">巡查员：</td>
            <td width="200px">
                <select style="width:150px" class="ls-wp-fullwidth-container chosen-select" id="employeeIdInput" name="employeeIdInput" data-placeholder="选择停车场名称...">
                    @Html.Raw(Model.AllOption)
                    @foreach (var entity in Model.InspectorList)
                    {
                        <option value="@entity.Id">@(entity.TrueName + "(" + entity.UserName + ")")</option>
                    }
                </select>
            </td>
            <td colspan="2" style="text-align: center;">
                <button type="button" id="myButton" data-loading-text="Loading..." class="btn btn-sm btn-primary" autocomplete="off">
                    搜索
                </button>
                @*<a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="GetAjaxChartData()">搜索</a>*@
            </td>
            <td colspan="2" style="text-align: center;">
                <button type="button" class="btn btn-sm btn-primary" autocomplete="off" id="exportButton">
                    导出
                </button>
                @*<a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="GetAjaxChartData()">搜索</a>*@
            </td>
        </tr>
    </table>
</div>

<div id="jqgridDiv">
    <table id="grid-table"></table>
    <div id="grid-pager"></div>
</div>
<div id="echarDiv" style="height: 410px;">

</div>
<script type="text/javascript" src="~/assets/js/bootstrapSwitch.js"></script>
<script type="text/javascript">
    $('#mySwitch').on('switch-change', function (e, data) {
        var $el = $(data.el), value = data.value;
        if (value == true) {
            $('#echarDiv').css('display', 'block');
            $('#jqgridDiv').css('display', 'none');
        }
        else {
            $('#echarDiv').css('display', 'none');
            $('#jqgridDiv').css('display', 'block');
        }
    });
    $('#myButton').on('click', function () {
        GetAjaxChartData();//更改线性数据
        jQuery('#grid-table').jqGrid('setGridParam', {
            //escape()---中文转码
            // url: "../System/GetOperFunction?name=" + escape(arrayToJson(dataname).toString()),
            url: '../Inspectors/JqGridData',
            datatype: 'json',
            postData:
            {
                'operateDateBegin': $('#operateDateBegin').val(),
                'operateDateEnd': $('#operateDateEnd').val(),
                'employeeIdInput': $('#employeeIdInput').val()
            },
            page: 1
        }).trigger('reloadGrid');
        //jQuery('#grid-table').jqGrid('setCaption', "操作权限").trigger('reloadGrid');
    });
    $('#exportButton').on('click', function () {


        var count = $('#grid-table').jqGrid("getRowData").length;
        //$('#grid-table').jqGrid('setGridWidth', $(".page-content").width());
        if (count > 0) {
            var operateDateBegin = $('#operateDateBegin').val();
            var operateDateEnd = $('#operateDateEnd').val();
            var employeeIdInput = $('#employeeIdInput').val();
            window.location.href = "../StaticReport/ExportInspectorReport?operateDateBegin=" + operateDateBegin + "&operateDateEnd=" + operateDateEnd + "&employeeIdInput=" + employeeIdInput;
        }
        else {
            NotifyWarn('报表暂无数据！');
        }
    });
</script>
<script type="text/javascript" src="~/assets/js/Echarts/dist/esl.js"></script>
<script type="text/javascript" src="~/assets/js/Echarts/dist/echarts.js"></script>
<script type="text/javascript" src="~/assets/js/Echarts/dist/chart/line.js"></script>
<script type="text/javascript">
    //定义图表options
    var options = {
        title: {
            text: "收费员日报曲线图",
            subtext: "实收/欠费/现金/账号/应收"
        },
        tooltip: {
            trigger: 'axis'
        },
        legend: {
            data: ["实收", "欠费", "现金", "账号", "应收"]
        },
        toolbox: {
            show: true,
            feature: {
                mark: { show: true },
                dataView: { show: true, readOnly: false },
                magicType: { show: true, type: ['line', 'bar'] },
                restore: { show: true },
                saveAsImage: { show: true }
            }

        },
        calculable: true,
        xAxis: [
            {
                type: 'category',
                boundaryGap: false,
                data: ['0', '0', '0']
                //data: []
            }
        ],
        yAxis: [
            {
                type: 'value',
                axisLabel: {
                    formatter: '{value} '
                }
            }
        ],
        series: [{
            name: '实收',
            type: 'line',
            data: [0, 0, 0]
            //data: []
        }, {
            name: '欠费',
            type: 'line',
            data: [0, 0, 0]
            //data: []
        }, {
            name: '现金',
            type: 'line',
            data: [0, 0, 0]
            //data: []
        }, {
            name: '账号',
            type: 'line',
            data: [0, 0, 0]
            //data: []
        }, {
            name: '应收',
            type: 'line',
            data: [0, 0, 0]
            //data: []
        }]
    };

    var myChart;
    // Step:4 require echarts and use it in the callback.
    // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
    require.config({
        paths: {
            echarts: '~/assets/js/Echarts/dist'
        }
    });
    require(
        [
            'echarts',
            'echarts/chart/line' //按需加载图表关于线性图、折线图的部分
        ],
        //DrawEChart //异步加载的回调函数绘制图表
        function (ec) {
            myChart = ec.init(document.getElementById('echarDiv'));

            //选择一个空图表
            myChart.setOption(options);
            GetAjaxChartData();
        }
    );
    // 如果需要再次使用ECharts的图表实例，建议你还是保存init返回的图表实例吧


    ///点击按钮获取图表数据采用ajax方式
    function GetAjaxChartData() {
        //require('echarts').init(dom).setOption(window.options);
        //获得图表的options对象
        //var options = myChart.getOption();
        //图表显示提示信息
        myChart.showLoading({
            text: "图表数据正在努力加载..."
        });
        //通过Ajax获取数据
        $.ajax({
            type: "post",
            async: true, //同步执行
            url: '/Inspectors/EcharData',
            data: {
                //type: 'getData',
                'operateDateBegin': $('#operateDateBegin').val(),
                'operateDateEnd': $('#operateDateEnd').val(),
                'employeeIdInput': $('#employeeIdInput').val(),
                'rows': 15,
                'page': 1
            },
            // data: { operatedatebegin: $('#operateDateBegin').datebox('getValue'), operatedateend: $('#operateDateEnd').datebox('getValue') },
            //  url: "EmployeeMoneyLine.aspx?type=getData&operateDateBegin=2015/6/30",
            dataType: "json", //返回数据形式为json
            success: function (result) {
                if (result) {
                    //将返回的category和series对象赋值给options对象内的category和series
                    //因为xAxis是一个数组 这里需要是xAxis[i]的形式
                    options.xAxis[0].data = result.category;
                    options.series = result.series;
                    options.legend.data = result.legend;
                    myChart.hideLoading();
                    myChart.setOption(options, true);
                }
            },
            error: function (errorMsg) {
                console.log(errorMsg);
                alert("不好意思，图表请求数据失败啦!");
            }

        });
    }
</script>

@section scriptsgrid
{
    jQuery(grid_selector).jqGrid({
    url: '../Inspectors/JqGridData',
    datatype: "json",
    async: true, //同步执行
    mtype: "post",
    height: 400,
    autowidth: true,
    shrinkToFit:false,
    colNames: ['巡查员工号', '巡查员', '实收总计', '现金收入', '账号收入', '欠费总和', '应收总和', '在线支付', '开户/充值', '现金补缴', '账号补缴', '在线补缴', '总收入(收入+补缴+开户/充值)'],
    colModel: [
    { name: 'UserName', index: 'UserName',width:85 },
    { name: 'ChargeOperaName', index: 'ChargeOperaName',width:95 },
    { name: 'SumFactReceive', index: 'SumFactReceive',formatter: 'number',width:85 },
    { name: 'XJSumFactReceive', index: 'XJSumFactReceive',formatter: 'number',width:85 },
    { name: 'SKSumFactReceive', index: 'SKSumFactReceive' ,formatter: 'number',width:85 },
    { name: 'SumArrearage', index: 'SumArrearage',formatter: 'number',width:85  },
    { name: 'SumMoney', index: 'SumMoney' ,formatter: 'number', width:85 },
    { name: 'SumOnlinePay', index: 'SumOnlinePay' ,formatter: 'number', width:85 },
    { name: 'CardMoney', index: 'CardMoney' ,formatter: 'number', width:85 },
    { name: 'XJSumRepayment', index: 'XJSumRepayment',formatter: 'number',width:85 },
    { name: 'SKSumRepayment', index: 'SKSumRepayment',formatter: 'number',width:85 },
    { name: 'OnlineSumRepayment', index: 'OnlineSumRepayment',formatter: 'number',width:85 },
    { name: 'SumIncomePlusBack', index: 'SumIncomePlusBack',formatter: 'number',width:195 }
    ],aggregates : [{
    member : 'Price',
    aggregator : 'sum',
    width:80,
    formatter:'number',
    align:'right',
    summaryType: 'sum'
    }],
    viewrecords: true,
    rowNum: 10,
    rowList: [10, 20, 30],
    pager: pager_selector,
    sortname: 'Id',
    sortorder: 'desc',
    altRows: true,//汇总
    caption:"Summary Footer Row",//汇总
    userDataOnFooter : true,//汇总
    footerrow:true,//汇总
    multiselect: true,
    multikey: "ctrlKey",
    multiboxonly: true,
    loadComplete: function () {
    var table = this;
    setTimeout(function () {
    styleCheckbox(table);
    updateActionIcons(table);
    updatePagerIcons(table);
    enableTooltips(table);
    }, 0);
    },
    loadComplete: function(){
    var count = $(grid_selector).jqGrid("getRowData").length;
    if(count == 0)
    NotifyWarn('暂无数据！');
    },
    caption: "@ViewBag.Title"
    });
}



<script type="text/javascript">
    $(document).ready(function () {
        var myDate = new Date();
        myDate.toLocaleDateString()

        var operateDateBegin = myDate.getFullYear() + "-"
            + ((myDate.getMonth() + 1) < 10 ? ("0" + (myDate.getMonth() + 1).toString()) : (myDate.getMonth() + 1)) + "-"
            + (myDate.getDate() < 10 ? ("0" + myDate.getDate().toString()) : myDate.getDate());
        var operateDateEnd = myDate.getFullYear() + "-"
            + ((myDate.getMonth() + 1) < 10 ? ("0" + (myDate.getMonth() + 1).toString()) : (myDate.getMonth() + 1)) + "-"
            + (myDate.getDate() < 10 ? ("0" + (myDate.getDate()).toString()) : myDate.getDate());
        $('#operateDateBegin').val(operateDateBegin);
        $('#operateDateEnd').val(operateDateEnd);
        //initEchartsBar();
        // GetAjaxChartData();
        $('#echarDiv').css('display', 'block');
        $('#jqgridDiv').css('display', 'block');

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
        $('.chosen-select').chosen();
        //$('#employeeIdInput_chosen').css('width', '150px');
    });
</script>


